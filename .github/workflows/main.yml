name: Deploy Laravel Project on push

on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies
        run: |
          composer install --no-scripts --no-progress --no-suggest
        continue-on-error: false  # Capture errors, but continue to allow for the error notification

      - name: Update Composer dependencies
        run: |
          composer update --no-scripts --no-progress --no-suggest
        continue-on-error: false

      - name: Dump autoload files
        run: composer dump-autoload --optimize
        continue-on-error: false

      - name: Generate storage link
        run: php artisan storage:link
        continue-on-error: false

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
        continue-on-error: false

      - name: Install Node.js (latest version)
        uses: actions/setup-node@v2

      - name: Create .env file
        run: |
          echo "APP_NAME=Laravel" >> .env
          echo "APP_ENV=local" >> .env
          echo "APP_KEY=base64:3e3RPGcZvDyYdacnnbUQlLqGNnK7exx3QJdvLkQkU8o=" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env
      
          echo "LOG_CHANNEL=stack" >> .env
          echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
          echo "LOG_LEVEL=debug" >> .env
      
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      
          echo "BROADCAST_DRIVER=log" >> .env
          echo "CACHE_DRIVER=file" >> .env
          echo "FILESYSTEM_DISK=local" >> .env
          echo "QUEUE_CONNECTION=sync" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "SESSION_LIFETIME=120" >> .env
      
          echo "MEMCACHED_HOST=127.0.0.1" >> .env
      
          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PASSWORD=null" >> .env
          echo "REDIS_PORT=6379" >> .env
      
          echo "MAIL_MAILER=smtp" >> .env
          echo "MAIL_HOST=smtp.gmail.com" >> .env
          echo "MAIL_PORT=465" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_ENCRYPTION=tls" >> .env
          echo "MAIL_FROM_ADDRESS=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_FROM_NAME=\"${APP_NAME}\"" >> .env
      
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_DEFAULT_REGION=us-east-1" >> .env
          echo "AWS_BUCKET=" >> .env
          echo "AWS_USE_PATH_STYLE_ENDPOINT=false" >> .env
      
          echo "PUSHER_APP_ID=" >> .env
          echo "PUSHER_APP_KEY=" >> .env
          echo "PUSHER_APP_SECRET=" >> .env
          echo "PUSHER_HOST=" >> .env
          echo "PUSHER_PORT=443" >> .env
          echo "PUSHER_SCHEME=https" >> .env
          echo "PUSHER_APP_CLUSTER=mt1" >> .env
      
          echo "VITE_PUSHER_APP_KEY=\"\${PUSHER_APP_KEY}\"" >> .env
          echo "VITE_PUSHER_HOST=\"\${PUSHER_HOST}\"" >> .env
          echo "VITE_PUSHER_PORT=\"\${PUSHER_PORT}\"" >> .env
          echo "VITE_PUSHER_SCHEME=\"\${PUSHER_SCHEME}\"" >> .env
          echo "VITE_PUSHER_APP_CLUSTER=\"\${PUSHER_APP_CLUSTER}\"" >> .env

        continue-on-error: false

      - name: Install NPM dependencies
        run: npm install
        continue-on-error: false

      - name: Build front-end assets
        run: npm run build
        continue-on-error: false

      - name: Remove node_modules folder
        run: rm -rf node_modules

      - name: Remove vendor folder
        run: rm -rf vendor
        
      - name: 📂 Set up SSH key for deployment
        uses: webfactory/ssh-agent@v0.5.3
          with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
      - name: 🛠️ Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER }} >> ~/.ssh/known_hosts
    
      - name: 🚀 Deploy via SSH
        run: |
          rsync -avz --no-perms --omit-dir-times --delete build/ ${{ secrets.USER }}@${{ secrets.SERVER }}:${{ secrets.DIRECTION }}
          env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
